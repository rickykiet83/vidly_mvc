@model dynamic

@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>

<form id="newRental">
    <div class="mb-3">
        <label for="">Customer</label>
        <div class="tt-container">
            <input id="customers" name="customer" required data-rule-validCustomer="true" type="text" class="form-control">
        </div>
    </div>
    <div class="mb-3">
        <label for="">Movie</label>
        <div class="tt-container">
            <input id="movie" name="movie" type="text" data-rule-atLeastOneMovie="true" class="form-control">
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>
    <button class="btn btn-primary">Save</button>
</form>

@section Scripts
{
    @await Html.PartialAsync("_ValidationScriptsPartial");
    <script>
        $(document).ready(function () {
            let vm = {
                movieIds: [],
                customerId: null
            };
            const customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                },
            });

            $('#customers').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'customers',
                display: 'name',
                source: customers
            }).on("typeahead:select", function (e, customer) {
                vm.customerId = customer.id;
            });

            const movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'movies',
                display: 'name',
                source: movies
            }).on("typeahead:select", function (e, movie) {
                $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");

                $("#movie").typeahead("val", "");

                vm.movieIds.push(movie.id);
            });
            
            $.validator.addMethod("validCustomer", function () {
                console.log('validating validCustomer');
                return vm.customerId && vm.customerId !== 0;
            }, "Please select a valid customer");

            $.validator.addMethod("atLeastOneMovie", function () {
                console.log('validating atLeastOneMovie');
                return vm.movieIds.length > 0;
            }, "Please select at least one movie.");
            
            const validator = $("newRental").validate({
                submitHandler: function (e) {
                    e.preventDefault();
                    $.ajax({
                        url: "/api/newRentals",
                        contentType: "application/json",
                        method: "post",
                        data: JSON.stringify(vm)
                    }).done(function () {
                        console.log('done');
                        toastr.success('Rental successfully created');
                        $("#customers").typeahead("val", "");
                        $("#movie").typeahead("val", "");
                        $("#movies").empty();
                        vm = {
                            movieIds: [],
                            customerId: null
                        };
                        validator.resetForm();
                    }).fail(function () {
                        toastr.error('An error occurred while creating the rental');
                    });
                    
                    return false;
                }
            });
        });
    </script>
}